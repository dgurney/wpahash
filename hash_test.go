package main

import "testing"

type hashStruct struct {
	hash         []byte
	expectedHash uint64
}

// TODO: add more known hashes
var validHashes = []hashStruct{
	{[]byte{0x76, 0x8a, 0x06, 0xb6, 0x9f, 0x0c, 0xec, 0x1a, 0x53, 0xe9, 0x93, 0xa7, 0x55, 0x93, 0x55, 0x93, 0x19, 0x9a, 0x20, 0x7b, 0xc0, 0xfd, 0xd5, 0xa4, 0x97, 0xc0, 0x18, 0x6a, 0xce, 0x1d, 0xb3, 0x16, 0x92, 0x07, 0x27, 0x11, 0x88, 0x1d, 0x44, 0x6d, 0xd7, 0x0f, 0xec, 0x06, 0xfa, 0x39, 0x61, 0xf3, 0x63, 0x95, 0x69, 0xc5, 0x14, 0x4a, 0x07, 0x6b, 0x58, 0x43, 0xbb, 0xfc, 0xf2, 0x9e, 0x5c, 0x0a, 0xa1, 0x17, 0xc0, 0xca, 0x3e, 0xec, 0x33, 0xd1, 0xef, 0x2b, 0x8a, 0x2b, 0x68, 0x63, 0xda, 0xa3, 0x32, 0x0c, 0xf6, 0xaa, 0xa0, 0xd7, 0x75, 0x01, 0x02, 0xe9, 0xc3, 0xec, 0xa9, 0x0d, 0x4e, 0x52, 0x4a, 0x6b, 0xb4, 0xd4, 0x4e, 0xc8, 0xb1, 0x26, 0x46, 0x9d, 0x68, 0xbd, 0xe7, 0xf0, 0x11, 0xf7, 0x5b, 0x96, 0x14, 0xb9, 0x36, 0x5e, 0x57, 0x8b, 0x95, 0x09, 0x2b, 0x53, 0x88, 0x8b, 0xb5, 0x14}, 0xa7c77c0e9b1daf92},
}

func TestHashCalculation(t *testing.T) {
	for _, ht := range validHashes {
		h, err := calculateEulaHash("blah", ht.hash)
		if err != nil {
			t.Errorf("Unexpected error: %s", err)
		}
		switch {
		case h != ht.expectedHash:
			t.Errorf("Hash %x is not equal to %x!", h, ht.expectedHash)
		default:
			t.Logf("Got expected hash %x", h)
		}
	}
}
